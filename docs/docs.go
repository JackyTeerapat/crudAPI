// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/project": {
            "post": {
                "description": "Create a data project to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create a project",
                "parameters": [
                    {
                        "description": "Project",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            }
        },
        "/project/{id}": {
            "get": {
                "description": "Get a data user from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a data project to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a data project from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            }
        },
        "/researcher/profile_detail/{id}": {
            "get": {
                "description": "Get a data profile_detail from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile detail"
                ],
                "summary": "Get a Profile_detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "researcher ProfileID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/researcher.Researcher"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Create a data user to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Get a data user from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a data user to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a data user from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Project": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "estimate_remark": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_storage": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "boolean"
                },
                "project_estimate": {
                    "type": "boolean"
                },
                "project_point": {
                    "type": "integer"
                },
                "project_recommend": {
                    "type": "boolean"
                },
                "project_title": {
                    "type": "string"
                },
                "project_year": {
                    "type": "string"
                },
                "recommend_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "researcher.Researcher": {
            "type": "object",
            "properties": {
                "address_home": {
                    "type": "string"
                },
                "address_work": {
                    "type": "string"
                },
                "attach": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/researcher.tempAttach"
                    }
                },
                "degree": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/researcher.tempDegree"
                    }
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/researcher.tempExperience"
                    }
                },
                "explore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/researcher.tempExplore"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "position": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/researcher.tempPosition"
                    }
                },
                "profile_id": {
                    "type": "integer"
                },
                "program": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/researcher.tempProgram"
                    }
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "researcher.tempAttach": {
            "type": "object",
            "properties": {
                "file_action": {
                    "type": "string"
                },
                "file_id": {
                    "type": "integer"
                },
                "file_name": {
                    "type": "string"
                },
                "file_storage": {
                    "type": "string"
                }
            }
        },
        "researcher.tempDegree": {
            "type": "object",
            "properties": {
                "degree_program": {
                    "type": "string"
                },
                "degree_type": {
                    "type": "string"
                },
                "degree_university": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "researcher.tempExperience": {
            "type": "object",
            "properties": {
                "experience_end": {
                    "type": "string"
                },
                "experience_id": {
                    "type": "integer"
                },
                "experience_remark": {
                    "type": "string"
                },
                "experience_start": {
                    "type": "string"
                },
                "experience_type": {
                    "type": "string"
                },
                "experience_university": {
                    "type": "string"
                }
            }
        },
        "researcher.tempExplore": {
            "type": "object",
            "properties": {
                "explore_detail": {
                    "type": "string"
                },
                "explore_id": {
                    "type": "integer"
                },
                "explore_name": {
                    "type": "string"
                },
                "explore_year": {
                    "type": "string"
                }
            }
        },
        "researcher.tempPosition": {
            "type": "object",
            "properties": {
                "position_id": {
                    "type": "integer"
                },
                "position_name": {
                    "type": "string"
                }
            }
        },
        "researcher.tempProgram": {
            "type": "object",
            "properties": {
                "program_id": {
                    "type": "integer"
                },
                "program_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:9000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Researcher Service API",
	Description:      "This is a sample server for a researcher service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
